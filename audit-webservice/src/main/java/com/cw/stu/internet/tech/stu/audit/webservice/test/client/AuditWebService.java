
package com.cw.stu.internet.tech.stu.audit.webservice.test.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AuditWebService", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://192.16.2.23/AuditWebService.asmx?wsdl")
public class AuditWebService
    extends Service
{

    private final static URL AUDITWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException AUDITWEBSERVICE_EXCEPTION;
    private final static QName AUDITWEBSERVICE_QNAME = new QName("http://tempuri.org/", "AuditWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://192.16.2.23/AuditWebService.asmx?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        AUDITWEBSERVICE_WSDL_LOCATION = url;
        AUDITWEBSERVICE_EXCEPTION = e;
    }

    public AuditWebService() {
        super(__getWsdlLocation(), AUDITWEBSERVICE_QNAME);
    }

    public AuditWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), AUDITWEBSERVICE_QNAME, features);
    }

    public AuditWebService(URL wsdlLocation) {
        super(wsdlLocation, AUDITWEBSERVICE_QNAME);
    }

    public AuditWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AUDITWEBSERVICE_QNAME, features);
    }

    public AuditWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AuditWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AuditWebServiceSoap
     */
    @WebEndpoint(name = "AuditWebServiceSoap")
    public AuditWebServiceSoap getAuditWebServiceSoap() {
        return super.getPort(new QName("http://tempuri.org/", "AuditWebServiceSoap"), AuditWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuditWebServiceSoap
     */
    @WebEndpoint(name = "AuditWebServiceSoap")
    public AuditWebServiceSoap getAuditWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "AuditWebServiceSoap"), AuditWebServiceSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns AuditWebServiceSoap
     */
    @WebEndpoint(name = "AuditWebServiceSoap12")
    public AuditWebServiceSoap getAuditWebServiceSoap12() {
        return super.getPort(new QName("http://tempuri.org/", "AuditWebServiceSoap12"), AuditWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuditWebServiceSoap
     */
    @WebEndpoint(name = "AuditWebServiceSoap12")
    public AuditWebServiceSoap getAuditWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "AuditWebServiceSoap12"), AuditWebServiceSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AUDITWEBSERVICE_EXCEPTION!= null) {
            throw AUDITWEBSERVICE_EXCEPTION;
        }
        return AUDITWEBSERVICE_WSDL_LOCATION;
    }

}
