<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cw.stu.his.common.dao.persistence.bms.BmsTestPojoMapper">
  <resultMap id="BaseResultMap" type="com.cw.stu.his.common.dao.domain.bms.BmsTestPojo">
    <result column="NAME1" jdbcType="VARCHAR" property="name1" />
    <result column="NAME2" jdbcType="VARCHAR" property="name2" />
    <result column="NAME3" jdbcType="VARCHAR" property="name3" />
    <result column="NAME4" jdbcType="VARCHAR" property="name4" />
    <result column="NAME5" jdbcType="VARCHAR" property="name5" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <if test="oredCriteria != null">
        <foreach collection="oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </if>
      <if test="name1 != null and name1 != ''">
         and NAME1 = #{name1,jdbcType=VARCHAR}
      </if>
      <if test="name1Range != null and name1Range != ''">
         and NAME1 like concat('%',#{name1Range},'%')
      </if>
      <if test="name2 != null and name2 != ''">
         and NAME2 = #{name2,jdbcType=VARCHAR}
      </if>
      <if test="name2Range != null and name2Range != ''">
         and NAME2 like concat('%',#{name2Range},'%')
      </if>
      <if test="name3 != null and name3 != ''">
         and NAME3 = #{name3,jdbcType=VARCHAR}
      </if>
      <if test="name3Range != null and name3Range != ''">
         and NAME3 like concat('%',#{name3Range},'%')
      </if>
      <if test="name4 != null and name4 != ''">
         and NAME4 = #{name4,jdbcType=VARCHAR}
      </if>
      <if test="name4Range != null and name4Range != ''">
         and NAME4 like concat('%',#{name4Range},'%')
      </if>
      <if test="name5 != null and name5 != ''">
         and NAME5 = #{name5,jdbcType=VARCHAR}
      </if>
      <if test="name5Range != null and name5Range != ''">
         and NAME5 like concat('%',#{name5Range},'%')
      </if>
      <if test="extracClause != null and extracClause != ''">
         and  ${extracClause} 
      </if>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <if test="example.oredCriteria != null">
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </if>
      <if test="example.name1 != null and example.name1 != ''">
         and NAME1 = #{example.name1,jdbcType=VARCHAR}
      </if>
      <if test="example.name1Range != null and example.name1Range != ''">
         and NAME1 like concat('%',#{example.name1Range},'%')
      </if>
      <if test="example.name2 != null and example.name2 != ''">
         and NAME2 = #{example.name2,jdbcType=VARCHAR}
      </if>
      <if test="example.name2Range != null and example.name2Range != ''">
         and NAME2 like concat('%',#{example.name2Range},'%')
      </if>
      <if test="example.name3 != null and example.name3 != ''">
         and NAME3 = #{example.name3,jdbcType=VARCHAR}
      </if>
      <if test="example.name3Range != null and example.name3Range != ''">
         and NAME3 like concat('%',#{example.name3Range},'%')
      </if>
      <if test="example.name4 != null and example.name4 != ''">
         and NAME4 = #{example.name4,jdbcType=VARCHAR}
      </if>
      <if test="example.name4Range != null and example.name4Range != ''">
         and NAME4 like concat('%',#{example.name4Range},'%')
      </if>
      <if test="example.name5 != null and example.name5 != ''">
         and NAME5 = #{example.name5,jdbcType=VARCHAR}
      </if>
      <if test="example.name5Range != null and example.name5Range != ''">
         and NAME5 like concat('%',#{example.name5Range},'%')
      </if>
      <if test="example.extracClause != null and example.extracClause != ''">
         and  ${example.extracClause} 
      </if>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NAME1, NAME2, NAME3, NAME4, NAME5
  </sql>
  <select id="selectByExample" parameterType="com.cw.stu.his.common.dao.domain.bms.BmsTestPojoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from BMS.TEST
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cw.stu.his.common.dao.domain.bms.BmsTestPojoCriteria">
    delete from BMS.TEST
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cw.stu.his.common.dao.domain.bms.BmsTestPojo">
    insert into BMS.TEST (NAME1, NAME2, NAME3, 
      NAME4, NAME5)
    values (#{name1,jdbcType=VARCHAR}, #{name2,jdbcType=VARCHAR}, #{name3,jdbcType=VARCHAR}, 
      #{name4,jdbcType=VARCHAR}, #{name5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cw.stu.his.common.dao.domain.bms.BmsTestPojo">
    insert into BMS.TEST
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name1 != null">
        NAME1,
      </if>
      <if test="name2 != null">
        NAME2,
      </if>
      <if test="name3 != null">
        NAME3,
      </if>
      <if test="name4 != null">
        NAME4,
      </if>
      <if test="name5 != null">
        NAME5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name1 != null">
        #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null">
        #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null">
        #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null">
        #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null">
        #{name5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cw.stu.his.common.dao.domain.bms.BmsTestPojoCriteria" resultType="java.lang.Long">
    select count(*) from BMS.TEST
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update BMS.TEST
    <set>
      <if test="record.name1 != null">
        NAME1 = #{record.name1,jdbcType=VARCHAR},
      </if>
      <if test="record.name2 != null">
        NAME2 = #{record.name2,jdbcType=VARCHAR},
      </if>
      <if test="record.name3 != null">
        NAME3 = #{record.name3,jdbcType=VARCHAR},
      </if>
      <if test="record.name4 != null">
        NAME4 = #{record.name4,jdbcType=VARCHAR},
      </if>
      <if test="record.name5 != null">
        NAME5 = #{record.name5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update BMS.TEST
    set NAME1 = #{record.name1,jdbcType=VARCHAR},
      NAME2 = #{record.name2,jdbcType=VARCHAR},
      NAME3 = #{record.name3,jdbcType=VARCHAR},
      NAME4 = #{record.name4,jdbcType=VARCHAR},
      NAME5 = #{record.name5,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="insertListSelective" parameterType="map">
    insert all 
    <foreach close=" " collection="records" item="listItem" open=" " separator=" ">
      into BMS.TEST
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="listItem.name1 != null">
          NAME1,
        </if>
        <if test="listItem.name2 != null">
          NAME2,
        </if>
        <if test="listItem.name3 != null">
          NAME3,
        </if>
        <if test="listItem.name4 != null">
          NAME4,
        </if>
        <if test="listItem.name5 != null">
          NAME5,
        </if>
      </trim>
       values 
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="listItem.name1 != null">
          #{listItem.name1,jdbcType=VARCHAR},
        </if>
        <if test="listItem.name2 != null">
          #{listItem.name2,jdbcType=VARCHAR},
        </if>
        <if test="listItem.name3 != null">
          #{listItem.name3,jdbcType=VARCHAR},
        </if>
        <if test="listItem.name4 != null">
          #{listItem.name4,jdbcType=VARCHAR},
        </if>
        <if test="listItem.name5 != null">
          #{listItem.name5,jdbcType=VARCHAR},
        </if>
      </trim>
       SELECT 1 FROM DUAL 
    </foreach>
  </insert>
</mapper>